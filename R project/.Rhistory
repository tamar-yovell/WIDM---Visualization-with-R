df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point()
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point()
ggplot(df, aes(x = x, y = y, color = y)) + geom_point()
+   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.ticks.x=x)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.ticks.x=1:20)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=1:20)
rlang::last_error()
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_line(1:20))
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +   theme(axis.title.x=element_blank(),
axis.ticks.x=element_line(1:20))
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_line(1:20))
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_line(1:20))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_line(1:20))
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
theme(axis.title.x="Season",
axis.title.y=element_blank(),
axis.ticks.x=element_line(1:20))
y)) + geom_point() +
theme(axis.title.y=element_blank())
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
ylab(NULL)
, color = y)) + geom_point() +
ylab(NULL) + xlab("Season
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
ylab(NULL) + xlab("Season")
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
xlab("Season") + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", 1, labels = waiver(), limits=c(1,20)) + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", breaks = 1, labels = waiver(), limits=c(1,20)) + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), limits=c(1,20)) + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation")
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
library(plyr)
library(ggplot2)
mole_data = read.table("moles_data.txt", sep = "\t", header = TRUE)
# ~~~ Gender pie chart ~~~
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
# ~~~ Time vs occupation chart ~~~
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
# ~~~ Generate PDF ~~~
pdf("out.pdf")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Moles gender", col = c("#ff33e3", "blue"))
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
dev.off()
library(plyr)
library(ggplot2)
mole_data = read.table("moles_data.txt", sep = "\t", header = TRUE)
# ~~~ Gender pie chart ~~~
jpeg("Gender-Pie-Chart.jpg", width = 350, height = "350")
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Moles gender", col = c("#ff33e3", "blue"))
dev.off()
# ~~~ Time vs occupation chart ~~~
jpeg("Gender-Pie-Chart.jpg", width = 350, height = "350")
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
dev.off()
jpeg("Gender-Pie-Chart.jpg", width = 350, height = "350")
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Moles gender", col = c("#ff33e3", "blue"))
dev.off()
jpeg("Gender-Pie-Chart.jpg", width = 350, height = 350)
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Moles gender", col = c("#ff33e3", "blue"))
dev.off()
library(plyr)
library(ggplot2)
mole_data = read.table("moles_data.txt", sep = "\t", header = TRUE)
# ~~~ Gender pie chart ~~~
jpeg("Gender-Pie-Chart.jpg", width = 500, height = 500)
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Moles gender", col = c("#ff33e3", "blue"))
dev.off()
# ~~~ Time vs occupation chart ~~~
jpeg("Time-vs-occupation.jpg", width = 600, height = 350)
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
dev.off()
jpeg("Time-vs-occupation.jpg", width = 600, height = 250)
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none")
dev.off()
jpeg("Gender-Pie-Chart.jpg", width = 500, height = 500)
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Mole's gender", col = c("#ff33e3", "blue"))
dev.off()
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
jpeg("Time-vs-occupation.jpg", width = 600, height = 250)
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
dev.off()
jpeg("Time-vs-occupation.jpg", width = 600, height = 150)
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
dev.off()
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
ggsave('foo.eps', device = 'eps')
?ggsave
ggplot(df, aes(x = x, y = y, color = y)) + geom_point() +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
ggsave('foo.jpg', device = 'eps')
ggsave('foo.jpg')
ggsave('foo.jpg', scale = 0.5)
ggsave('foo.jpg', scale = 2)
ggsave('foo.jpg', width = 100)
ggsave('foo.jpg', width = 10)
ggsave('foo.jpg', width = 10, height = 5)
ggsave('foo.jpg', width = 10, height = 2)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point(aes(size = 2)) +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
ggsave('foo.jpg', width = 10, height = 2)
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Mole's gender", col = c("#ff33e3", "blue"))
ggsave("Gender-Pie-Chart.jpg")
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Mole's gender", col = c("#ff33e3", "blue"))
ggsave("Gender-Pie-Chart.jpg")
jpeg("Gender-Pie-Chart.jpg", width = 500, height = 500)
gender_ag = count(mole_data$Mol_gender)
labels = paste(c("Female (", "Male ("), gender_ag$freq, c(")", ")"), sep = "")
pie(gender_ag$freq, labels, init.angle = 70,
main = "Mole's gender", col = c("#ff33e3", "blue"))
dev.off()
occ_presentator = mapply(grepl, "presentator", mole_data$Mol_occupation)
occ_actor = mapply(grepl, "acteur|actrice", mole_data$Mol_occupation)
x = 1:20
y = rep("Other", 20)
y[occ_actor] = "Actor"
y[occ_presentator] = "TV Anchor"
y = factor(y, levels = c("Other", "TV Anchor", "Actor"))
df = data.frame(x, y)
ggplot(df, aes(x = x, y = y, color = y)) + geom_point(aes(size = 2)) +
scale_x_continuous("Season", labels = waiver(), breaks = 1:20) + ylab(NULL) +
ggtitle("Season vs. Mole occupation") + theme(legend.position="none") +
theme(plot.title = element_text(hjust=0.5))
ggsave("Time-vs-occupation.jpg", width = 10, height = 2)
continent = c("South America", "Asia", "Europe", "Australia", "North America", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
ggplot(df, aes(x = x, y = y) + geom_bar()
ggplot(df, aes(x = x, y = y) + geom_bar()
x = 1:20
ggplot(df, aes(x = x, y = y)) + geom_bar()
rlang::last_error()
ggplot(df, aes(x = continent, y = frequency)) + geom_bar()
ggplot(df, aes(x = continent, y = frequency)) + geom_bar()
rlang::last_error()
ggplot(df, aes(x = continent, y = frequency)) + geom_bar(stat="identity")
df = df[order(frequency),]
ggplot(df, aes(x = continent, y = frequency)) + geom_bar(stat="identity")
df = data.frame(continent, frequency)
df
df = df[order(frequency),]
df
continent = c("South America", "Asia", "Europe", "Australia", "North America", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = continent, y = frequency)) + geom_bar(stat="identity")
library(plyr)
library(ggplot2)
continent = c("South America", "Asia", "Europe", "Australia", "North America", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = continent, y = frequency)) + geom_bar(stat="identity")
?reorder
ggplot(df, aes(x = reorder(continent, frequency), y = frequency)) + geom_bar(stat="identity")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) + geom_bar(stat="identity")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab()
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab("NULL")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL)
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
title("Continents of destination")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
title("Continents of destination")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
title("Continents of destination")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
title("Continents of destination")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination")
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggsave("continents.jpg", width = 10, height = 10)
ggsave("continents.jpg", width = 10, height = 7)
ggsave("continents.jpg", width = 6, height = 4)
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency), color = continent) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, color = continent)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, fill = continent)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
continent = c("South America", "Asia", "Europe", "Australia", "North\n America", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, fill = continent)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
continent = c("South America", "Asia", "Europe", "Australia", "North\nAmerica", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, fill = continent)) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
continent = c("South\nAmerica", "Asia", "Europe", "Australia", "North\nAmerica", "Africa")
frequency = c(6, 6, 4, 2, 2, 1)
df = data.frame(continent, frequency)
df = df[order(frequency),]
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, fill = "blue")) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5))
ggsave("continents.jpg", width = 6, height = 4)
ggplot(df, aes(x = reorder(continent, -frequency), y = frequency, fill = "blue")) +
geom_bar(stat="identity") + xlab(NULL) + ylab("Count of seasons") +
ggtitle("Continents of destination") + theme(plot.title = element_text(hjust=0.5)) +
theme(legend.position="none")
ggsave("continents.jpg", width = 6, height = 4)
install.packages(‘selectr’)
install.packages(selectr)
install.packages("selectr")
install.packages("xml2")
install.packages("rvest")
# ~~~ Web scraping for rating plot ~~~
library(rvest)
# ~~~ Web scraping for rating plot ~~~
library(xml2)
library(rvest)
scraped = read_html("https://en.wikipedia.org/wiki/Wie_is_de_Mol%3F_(Dutch_TV_series)")
View(scraped)
full_page = read_html("https://en.wikipedia.org/wiki/Wie_is_de_Mol%3F_(Dutch_TV_series)")
full_page %>% html_nodes("h1") -> titles
titles
full_page %>% html_nodes("h2") -> titles
titles
full_page %>% html_nodes("h2") %>% html_text() -> titles
titles
full_page %>% html_nodes("#Ratings") %>% html_text() -> ratings_text
ratings_text
/html/body/div[3]/div[3]/div[5]/div[1]/table[6]
full_page = read_html("https://en.wikipedia.org/wiki/Wie_is_de_Mol%3F_(Dutch_TV_series)")
full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table() -> table_hopefully
head(table_hopefully)
table_hopefully = full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table()
table_hopefully = full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table(fill = TRUE)
head(table_h)
head(table_hopefully)
ratings_table = full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table(fill = TRUE)
ratings_table["finale (reunion)"]
ratings_table["Finale (Reunion)"]
ratings_table[5]
library(xml2)
library(rvest)
full_page = read_html("https://en.wikipedia.org/wiki/Wie_is_de_Mol%3F_(Dutch_TV_series)")
ratings_table = full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table(fill = TRUE)
ratings_table:data.frame()
data.frame(ratings_table)
data.frame(ratings_table)["Finale (Reunion)"]
data.frame(ratings_table)["Season"]
data.frame(ratings_table)$"Season"
data.frame(ratings_table)$"Finale (Reunion)"
data.frame(ratings_table)$"Average ratings"
colnames(data.frame(ratings_table))
data.frame(ratings_table)$"Finale..(Reunion)..1"
data.frame(ratings_table)$"Finale..Reunion..1"
ratings_table = full_page %>% html_nodes(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[6]") %>% html_table(fill = TRUE)
data = data.frame(ratings_table)$"Finale..Reunion..1"
plot(data)
data = data[2:]
data = data[2:21]
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = data[2:21]
plot(1:20, data)
x = 1:20
plot(x, data)
min(x)
data = data[2:21]
plot(1:20, data)
data
data = data[2:20]
plot(1:19, data)
data
data = data[2:21]
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = data[2:21]
data
plot(1:19, data)
plot(1:20, data)
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = as.numeric(data[2:21])
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = data[2:21]
data = data.frame(ratings_table)$"Finale..Reunion..1"
data = data[2:21]
data = as.numeric(gsub(",", "",data))
plot(1:20, data)
ggplot(data, aes(x = 1:20, y = data)) + geom_point()
library(plyr)
library(ggplot2)
ggplot(data, aes(x = 1:20, y = data)) + geom_point()
df = data.frame(1:20, data)
View(df)
ggplot(df, aes(x = X1.20, y = data)) + geom_point()
dev.off()
ggplot(df, aes(x = X1.20, y = data)) + geom_point()
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating")
20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_continuous(labels = percent)
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_continuous(labels = "percent")
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_continuous(labels = "comma")
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating")
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_continuous(labels = scientific)
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") + scale_y_continuous(labels = scales::comma)
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") +
scale_y_continuous(labels = scales::comma) + ggtitle("Finale Rating vs. Season")
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Finale rating") +
scale_y_continuous(labels = scales::comma) + ggtitle("Finale Rating vs. Season") +
theme(plot.title = element_text(hjust=0.5))
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Number of Viewers") +
scale_y_continuous(labels = scales::comma) + ggtitle("Finale Rating vs. Season") +
theme(plot.title = element_text(hjust=0.5))
ggsave("Rating", width = 6, height = 4)
dev.off()
ggplot(df, aes(x = X1.20, y = data)) + geom_point() +
xlab("season") + ylab("Number of Viewers") +
scale_y_continuous(labels = scales::comma) + ggtitle("Finale Rating vs. Season") +
theme(plot.title = element_text(hjust=0.5))
ggsave("Rating", width = 6, height = 4)
ggsave("Rating.jpg", width = 6, height = 4)
ggsave("Rating.jpg", width = 6, height = 4)
